RX Library 2.75
===============

  ====================== ВНИМАНИЕ! =======================
  Обязательно ознакомьтесь с содержимым этого файла перед 
  началом работы с библиотекой Delphi VCL Extensions (RX). 
  Текст файла изменился по сравнению с предыдущей версией!
  ========================================================
  СЛЕДУЙТЕ ИНСТРУКЦИЯМ, ИЗЛОЖЕННЫМ В СЕКЦИИ "ИНСТАЛЛЯЦИЯ"!
  ========================================================

СОДЕРЖАНИЕ ЭТОГО ФАЙЛА
----------------------
Введение
Новое в этой версии
История
Инсталляция
Справочные файлы
Демонстрационные примеры
Возможные проблемы
Совместимость с Borland Delphi
Совместимость с Borland C++ Builder
Исходные тексты
Примечания

Введение
--------

RX Library - это библиотека компонент и функций для Borland Delphi и
Borland C++ Builder, включающая исходные тексты всех модулей,
демонстрационные примеры и файл справки, подключаемый к справочной системе
Delphi.

Библиотека RX является бесплатным свободно распространяемым (freeware)
продуктом. Это означает, что вы можете свободно распространять библиотеку
в оригинальном виде, без изменения исходных текстов модулей и содержимого
инсталляционного архива.

Мы не гарантируем правильную работу компонент и функций библиотеки
и не несем ответственности за возможный ущерб в результате использования
данного программного обеспечения. Мы не оказываем техническую поддержку,
однако мы будем признательны за любые замечания и пожелания, высказанные
в наш адрес.

Новое в версии 2.75
-------------------

При инсталляции библиотеки поверх предыдущей версии все старые файлы
будут сохранены в подкаталоге BACKUP того каталога, куда производится
установка библиотеки. Не торопитесь уничтожать эти файлы, возможно, Вы
захотите продолжать пользоваться старыми версиями некоторых компонент.

Совместимость с Borland Delphi 5.0 и Borland C++Builder 4.0.

Новая компонента TRxLoginDialog.

Исправлены обнаруженные ошибки, оставлены необнаруженные, добавлены новые.

Изменения и сведения об исправленных ошибках и новых свойствах и методах
в других компонентах см. в файле CHANGES.RUS (win1251 cp).

История
-------

RX 2.75 (12.10.99). Текущая версия. Исправление ошибок версии 2.60.
Новая компонента TRxLoginDialog. Совместимость с Borland Delphi 5.0
и Borland C++Builder 4.0.

RX 2.60 (27.01.99). Исправление ошибок версии 2.50.
Новые компоненты TRxMemoryData, TRxRichEdit.

RX 2.50 (22.07.98). Новые компоненты TRxFolderMonitor, TRxLookupEdit,
TRxGradientCaption, TRxMainMenu, TRxPopupMenu. Совместимость с Delphi 4.0
(build 5.37 C/S) and C++Builder 3.0.

RX 2.40 (11.02.98). Новые компоненты TRxDBComboEdit, TRxCalcEdit,
TRxDBCalcEdit. Поддержка изображений формата GIF.

RX 2.32 (30.07.97). Полная совместимость со всеми редакциями 
Delphi 3 и C++Builder 1.0.

RX 2.31 (08.05.97). Совместимость в релизом Delphi 3.0 
Client/Server (build 5.53 от 20.03.97).

RX 2.30 (22.04.97). Новые компоненты TMRUList, TRxTimerList, 
TRxWindowHook. Совместимость с бета-версией Delphi 3 (build 3.0.4.78).

RX 2.01 (12.02.97), 2.02 (10.03.97). Исправлены некоторые ошибки
и неточности версии 2.00 (см. файл CHANGES.TXT). Новая компонента
TRxDBRichEdit.

RX 2.00 (24.01.97). Новые компоненты TMemoryTable, TRxCheckListBox,
TRxDBComboBox, TStrHolder, TAppEvents.

RX 1.32 (11.11.96). Совместимость с Delphi 2.0. Новые компоненты 
TSQLScript, TPageManager, TRxTrayIcon; данная версия широко не
распространялась.

RX 1.03 (14.01.96). Из поставки исключены скомпилированные DCU-модули.
Новые компоненты TFormStorage, TDBSecurity, TRxQuery, TSpeedbar,
TRxSpinButton, TRxSpinEdit, TRxCalculator.

RX 1.02 (27.12.95). Делокализация в приватных целях.

RX 1.01 (04.12.95). Реализация компоненты TRxDBFilter, позволяющая задавать
сложные условия фильтрации.

RX 1.00 (11.95). Создана справочная система по библиотеке. Все модули
библиотеки совместимы с доступной версией Delphi32. Написаны
демонстрационные примеры и скрипт для инсталлятора.

ExtVCL (набор компонент) версии от 25.04.95 и 20.07.95.

Инсталляция
-----------

После инсталляции исходные тексты модулей библиотеки и 
скомпилированные файлы ресурсов располагаются в каталоге RX\UNITS.
При этом в зависимости от выбранного при инсталляции языка в этот
каталог будут установлены русские либо английские версии строковых
файлов ресурсов. Исходные тексты файлов ресурсов инсталлируются в
подкаталог RX\RESOURCE. Английская и русская версия исходных текстов
строковых ресурсов располагаются соответственно в подкаталогах 
RX\RESOURCE\ENG и RX\RESOURCE\RUS.

После инсталляции библиотеки для ее использования Вам необходимо
установить набор компонент RX Library в палитру компонент Delphi.
Для этого выполните описанные ниже действия.

1. Delphi 5.x.

Выберите пункт меню "File/Open...", и откройте пакет (package) RXCTL5.DPK.
В появившемся окне "Package - ..." нажмите кнопку "Compile". После
компиляции пакета RXCTL5 аналогичным образом скомпилируйте остальные
run-time пакеты RXDB5.DPK и RXBDE5.DPK. Скомпилированные BPL-файлы поместите
в каталог, включенный в переменную окружения PATH (например, WINDOWS\SYSTEM).
После компиляции run-time пакетов окройте с помощью меню "File/Open..." файл
DCLRX5.DPK. В появившемся окне "Package - ..." нажмите кнопку "Compile",
и после компиляции нажмите кнопку "Install". После установки пакета
DCLRX5.DPK (должен быть установлен в IDE первым) произведите те же действия
с пакетами DCLRXDB5.DPK и DCLRXBD5.DPK.
Не сохраняйте пакеты библиотеки RX в Delphi IDE.
Если у Вас была установлена предыдущая версия библиотеки RX, удалите
перед установкой старые скомпилированные packages - файлы RXCTL5.BPL,
RXDB5.BPL, RXBDE5.DPK, DCLRX5.BPL, DCLRXDB5.BPL, DCLRXBD5.DPK.

2. Delphi 4.x.

Выберите пункт меню "File/Open...", и откройте пакет (package) RXCTL4.DPK.
В появившемся окне "Package - ..." нажмите кнопку "Compile". После
компиляции пакета RXCTL аналогичным образом скомпилируйте второй
run-time пакет RXDB4.DPK. Скомпилированные BPL-файлы поместите в каталог,
включенный в переменную окружения PATH (например, WINDOWS\SYSTEM). После
компиляции run-time пакетов окройте с помощью меню "File/Open..." файл
DCLRX4.DPK. В появившемся окне "Package - ..." нажмите кнопку "Compile",
и после компиляции нажмите кнопку "Install". После установки пакета
DCLRX4.DPK (должен быть установлен в IDE первым) произведите те же действия
с пакетом DCLRXDB4.DPK.
Не сохраняйте пакеты библиотеки RX в Delphi IDE. Если вы все же сохранили
package в Delphi, то удалите при помощи любого текстового редактора
строку {$R *.RES} из текста пакета (DPK-файла).
Если у Вас была установлена предыдущая версия библиотеки RX, удалите
перед установкой старые скомпилированные packages - файлы RXCTL4.BPL,
RXDB4.BPL, DCLRX4.BPL, DCLRXDB4.BPL.

3. C++Builder 4.x.

Если у Вас была установлена предыдущая версия библиотеки RX, удалите
пакеты библиотеки из IDE. Также удалите перед установкой старые
скомпилированные packages - файлы RXCTL4.BPL, RXDB4.BPL, DCLRX4.BPL
и DCLRXDB4.BPL - с диска (если они существуют).
Отключите в среде опцию линкера "Use dynamic RTL".
Выберите пункт меню "File/Open...", и откройте run-time пакет (package)
RXCTL4.BPK. Затем используйте пункт меню "Project\Make..." или
"Project\Build..." для компиляции пакета RXCTL4.BPK. После компиляции
пакета RXCTL аналогичным образом скомпилируйте другой run-time пакет
RXDB4.BPK. Скомпилированные BPL-файлы поместите в каталог, включенный в
переменную окружения PATH (например, WINDOWS\SYSTEM).
После компиляции run-time пакетов окройте с помощью меню "File/Open..."
файл DCLRXCTL4.BPK и скомпилируйте его аналогично при помощи пункта меню
"Project\Make..." или "Project\Build...", после чего произведите те же
действия с пакетом DCLRXDB4.BPK.
Для последующей установки design-time пакетов в среду C++Builder 4.0
используйте пункт меню "Component\Install packages...". После открытия
диалогового окна "Packages" нажмите кнопку "Add...", выберите файл
DCLRX4.BPL из каталога RX\UNITS и нажмите кнопку "OK" для установки
пакета в IDE. После установки пакета DCLRX4 точно так же установите в
IDE пакет DCLRXDB4.BPL.
Не сохраняйте пакеты библиотеки RX в C++Builder IDE.

4. Delphi 3.x.

Выберите пункт меню "File/Open...", и откройте пакет (package) RXCTL.DPK.
В появившемся окне "Package - ..." нажмите кнопку "Compile". После
компиляции пакета RXCTL аналогичным образом скомпилируйте 2 других
run-time пакета RXDB.DPK и RXTOOLS.DPK. Скомпилированные DPL-файлы
поместите в каталог, включенный в переменную окружения PATH (например,
WINDOWS\SYSTEM). После компиляции run-time пакетов окройте с помощью меню
"File/Open..." файл DCLRXCTL.DPK. В появившемся окне "Package - ..."
нажмите кнопку "Install". После установки пакета DCLRXCTL.DPK (должен
быть установлен в IDE первым) произведите те же действия с пакетами
DCLRXDB.DPK и DCLRXTLS.DPK.
Не сохраняйте пакеты библиотеки RX в Delphi IDE. Если вы все же сохранили
package в Delphi, то удалите при помощи любого текстового редактора
строку {$R *.RES} из текста пакета (DPK-файла).
Если у Вас была установлена предыдущая версия библиотеки RX, удалите
перед установкой старые скомпилированные packages - файлы RXCTL.DPL,
RXDB.DPL, RXTOOLS.DPL, RXCTL.DCP, RXDB.DCP, RXTOOLS.DCP, DCLRXCTL.DPL,
DCLRXDB.DPL, DCLRXTLS.DPL, DCLRXCTL.DCP, DCLRXDB.DCP, DCLRXTLS.DCP.

5. C++Builder 3.x.

Если у Вас была установлена предыдущая версия библиотеки RX, удалите
пакеты библиотеки из IDE. Также удалите перед установкой старые
скомпилированные packages - файлы RXCTL.BPL, RXDB.BPL, DCLRXCTL.BPL
и DCLRXDB.BPL - с диска (если они существуют).
Отключите в среде опцию линкера "Use dynamic RTL".
Выберите пункт меню "File/Open...", и откройте run-time пакет (package)
RXCTL.BPK. Затем используйте пункт меню "Project\Make..." или
"Project\Build..." для компиляции пакета RXCTL.BPK. После компиляции
пакета RXCTL аналогичным образом скомпилируйте другой run-time пакет
RXDB.BPK. Скомпилированные BPL-файлы поместите в каталог, включенный в
переменную окружения PATH (например, WINDOWS\SYSTEM).
После компиляции run-time пакетов окройте с помощью меню "File/Open..."
файл DCLRXCTL.BPK и скомпилируйте его аналогично при помощи пункта меню
"Project\Make..." или "Project\Build...", после чего произведите те же
действия с пакетом DCLRXDB.BPK.
Для последующей установки design-time пакетов в среду C++Builder 3.0
используйте пункт меню "Component\Install packages...". После открытия
диалогового окна "Packages" нажмите кнопку "Add...", выберите файл
DCLRXCTL.BPL из каталога RX\UNITS и нажмите кнопку "OK" для установки
пакета в IDE. После установки пакета DCLRXCTL точно так же установите в
IDE пакет DCLRXDB.BPL.
Не сохраняйте пакеты библиотеки RX в C++Builder IDE.

6. Delphi 2.x и C++Builder 1.x.

Выберите пункт меню "Component/Install...", нажмите кнопку Add, выберите
каталог, в который вы проинсталлировали модули RX Library (...\RX\UNITS)
и добавьте к списку установленных модулей (Installed Units) модули
RXCTLREG.PAS, RXDBREG.PAS и RXTOOREG.PAS, после чего нажмите "OK".

7. Delphi 1.x.

Выберите пункт меню "Options/Install Components", нажмите кнопку Add,
выберите каталог, в который вы проинсталлировали модули RX Library
(...\RX\UNITS) и добавьте к списку установленных модулей (Installed
Units) модули RXCTLREG.PAS, RXDBREG.PAS и RXTOOREG.PAS, после чего
нажмите "OK";

После перекомпиляции библиотеки в палитре компонент Delphi появятся
3 новые странички - "RX Controls", "RX DBAware" и "RX Tools" с
компонентами RX Library.

Справочные файлы
----------------

Справочные файлы к библиотеке RX для различных версий Delphi
распространяются в виде отдельных инсталляционных архивов.

Для подключения к справочной системе Delphi (версий 1.0 и 2.0)
файла помощи библиотеки RX Вам необходимо выполнить следующие действия:
 - сохранить резервную копию файла DELPHI\BIN\DELPHI.HDX;
 - запустить приложение DELPHI\HELP\HELPINST.EXE в Delphi 1.0 
или DELPHI\HELP\TOOLS\HELPINST.EXE в Delphi 2.0 (Help File 
Installer);
 - открыть в нем файл DELPHI\BIN\DELPHI.HDX и выбрать в меню
"Keywords/Add Keyword File";
 - открыть файл RX.KWF (для Delphi 1.0) или RX32.KWF (для 
Delphi 2.0), расположенный в каталоге RX\HELP;
 - выбрать "File/Save".
После сохранения файла DELPHI.HDX файл помощи библиотеки RX
становится доступен из справочной системы Delphi.

При установке справочных файлов для Delphi 3 и выше и C++Builder все
необходимые действия выполняются инсталляционной программой. При
перенесении Help-файлов в другой каталог или изменении расположения
Delphi (C++Builder) Вам необходимо проследить за тем, чтобы
дополнительные строки, записанные программой инсталляции в файлы
RXD3.CNT, DELPHI3.CFG (для Delphi 3), RXD4.TOC, DELPHI4.CFG (для
Delphi 4) или RXCB1.CNT, BCBHELP.CFG, содержали действительные пути
к файлам справки.

Демонстрационные примеры
------------------------

Демонстрационные программы, входящие в состав RX Library,
предназначены только для демонстрации работы библиотеки и НЕ
являются образцом того, КАК надо писать программы.

Примеры используют таблицы из каталога DELPHI\DEMOS\DATA
и псевдоним (alias) BDE "DBDEMOS" для работы с этими таблицами.

Примеры располагаются в подкаталогах:
 RX\DEMO\RXDEMO - приложение с примерами использования
большинства из компонент библиотеки (16 & 32 bit);
 RX\DEMO\DBEXPLOR - приложение Database Explorer 
(16 & 32 bit);
 RX\DEMO\DBEXPL32 - приложение Database Explorer (32 bit
only), содержащее примеры использования некоторых специфических
для 32-разрядной версии возможностей data-aware компонент
библиотеки;
 RX\DEMO\CBUILDER - демонстрационная программа для Borland
C++ Builder;
 RX\DEMO\GIFANM32 - демонстрационная программа работы с
изображениями формата GIF и компонентой TRxGIFAnimator.
 RX\DEMO\RICHED2 - демонстрационная программа работы с
компонентой TRxRichEdit.

Возможные проблемы
------------------

Библиотека RX Library была успешно установлена в Delphi IDE. Однако
после перезагрузки Delphi компоненты библиотеки RX не загружаются, и
выдается сообщение об ошибке: "One of the library files needed to run this
application cannot be found".
Для устранения этой ошибки после компиляции runtime-пакетов библиотеки RX
Вы должны поместить скомпилированные файлы пакетов
 Delphi 3 - DPL-файлы - RXCTL.DPL, RXTOOLS.DPL, RXDB.DPL
 Delphi 4 - BPL-файлы - RXCTL4.BPL, RXDB4.BPL
 Delphi 5 - BPL-файлы - RXCTL5.BPL, RXDB5.BPL, RXBDE5.BPL
 C++Builder 3 - BPL-файлы - RXCTL.BPL, RXDB.BPL
 C++Builder 4 - BPL-файлы - RXCTL4.BPL, RXDB4.BPL
в каталог, доступный через DOS-переменную окружения PATH, например,
в системный каталог Windows.

Из под Delphi при установке библиотеки без видимых причин возникает ошибка
"RLINK32: OUT OF MEMORY".
Это незначительная ошибка в Delphi 2.0 (ее уже нет в Delphi 2.01). Если Вы
получили эту ошибку при сборке VCL с компонентами из RX, то Вам
необходимо скомпилировать исходные файлы ресурсов (*.RC) компилятором
ресурсов BRCC32.EXE от Вашей версии Delphi (он находится в директории
BIN) для получения новых файлов (*.RES и *.DCR), совместимых с Вашей 
версией Delphi 2. Файлы *.RES после этого необходимо будет переименовать 
в *.R32, а *.DCR в *.D32.

При возникновении других ошибок в процессе установки библиотеки в
Delphi IDE проверьте, не существуют ли у Вас другие файлы ресурсов или
библиотек, названные также, как и модули в RX. Попробуйте переименовать
их или не ставьте совпадающие по названиям компоненты и модули (не
забудьте при этом убрать пути к этим файлам из опций Delphi).

Содержимое нижеследующей части этого раздела в основном относится к
пользователям предыдущих версий библиотеки RX.

В версии 2.50 компонента TRxDrawGrid перенесена из модуля RxCtrls
в отдельный модуль RxGrids. В связи с этим Вам необходимо
добавить новый модуль RxGrids в секцию "uses" Ваших модулей,
использующих эту компоненту.

В версии 2.50 изменен тип TGetBtnParamsEvent: в метод - обработчик
события OnGetBtnParams компоненты TRxDBGrid добавлен параметр SortMarker.

В версии 2.40 компоненты TFontComboBox и TColorComboBox
перенесены в новый модуль RxCombos. В связи с этим Вам необходимо
добавить новый модуль RxCombos в секцию "uses" Ваших модулей,
использующих указанные компоненты.

В версии 2.40 модуль DBUtils разделен на 2 модуля: DBUtils и
BDEUtils. Возможно, Вам придется включить новый модуль BDEUtils в 
секцию "uses" тех Ваших модулей, которые использовали процедуры и
функции модуля DBUtils.

В версии 2.40 добавлена поддержка изображений формата GIF. Это
сделано при помощи создания класса TGIFImage, унаследованного от
TGraphic. Если Вы используете другие библиотеки работы с изображениями
формата GIF (например, ImageLib), и не хотите использовать класс
TGIFImage из библиотеки RX, во избежание конфликтов закомментарьте
в файле RX.INC опцию {$DEFINE USE_RX_GIF}. Имейте в виду, что в этом
случае компонента TRxGIFAnimator также не будет зарегистрирована в
палитре компонентов Delphi.

В версии 2.30 было добавлено событие TRxDBGrid.OnTitleClick. В версии 2.31
оно переименовано в OnTitleBtnClick для устранения конфликта с одноименным
событием, появившимся в Delphi 3.0.

Начиная с версии 2.30 не имеет смысла присваивание значений
свойству TRxDBGrid.RowsHeight, т.к. это свойство и раньше работало
неправильно (пока само свойство сохранено для совместимости с
предыдущими версиями).

В версии 2.02 модуль CHECKLST.PAS уничтожен, его содержимое перенесено в
модуль RXCTRLS.PAS для устранения конфликта с одноименным модулем
Delphi 3.0. Измените соответствующую строку в секции "uses" Ваших модулей,
использующих компоненту TRxCheckListBox.

Компонента TPicClip, начиная с версии 2.00, наследуется от
TComponent, а не от TImage, поэтому в некоторых случаях возможно
сообщение об ошибке чтения значений свойств при открытии формы с
этой компонентой.

Событие OnAfterDialog не найдено при открытии формы в дизайнере
или во время выполнения (в компоненте TDateEdit). В компоненте
TDateEdit событие OnAfterDialog в версии 2.00 переименовано в
OnAcceptDate. Нужно открыть формы с этими компонентами в дизайнере
Delphi, проигнорировав возникшую ошибку, с помощью ObjectInspector
присвоить старые обработчики событию OnAcceptDate, сохранить формы,
перекомпилировать проект.

По умолчанию компоненты TDateEdit, TDBDateEdit теперь имеют
вместо диалога выпадающий popup-календарь. Если Вы хотите, не изменяя
старых проектов, работать с диалогом выбора даты, закомментарьте
опцию {$DEFINE DEFAULT_POPUP_CALENDAR} в файле RX.INC.

Компоненты TDatabaseList, TTableList, TFieldList, TIndexList,
TStoredProcList и TLangDrivList заменены на новые компоненты TBDEItems,
TDatabaseItems и TTableItems. Если Вы использовали старые компоненты,
то Вы можете определить опцию компиляции {$DEFINE USE_OLD_DBLISTS} в
файле RX.INC и перекомпилировать библиотеку. После этого старые
компоненты появятся в палитре и Вы сможете их использовать. Тем не 
менее, мы рекомендуем перейти на новые компоненты.

Свойство SortedField не найдено при открытии формы в дизайнере
или во время выполнения. Данное свойство уничтожено в версии 1.03 у 
компонент TRxLookupCombo и TRxLookupList. Нужно открыть формы с этими
компонентами в дизайнере Delphi, проигнорировав возникшую ошибку,
сохранить формы, перекомпилировать проект.

Компонента TToolbar не найдена. Используйте в проекте вместо нее 
компоненту TSpeedBar, появившуюся в версии 1.03, так как компонента 
TToolbar начиная с версии 1.03 не поддерживается.

Если Вы ранее использовали старую версию компоненты TRxDBFilter
(из RX версии младше, чем 1.32), то, возможно, в связи с произведенными 
в ней изменениями, эта компонента несколько изменит свое поведение в 
Вашем проекте. Начиная с версии 1.32 переписан разбор выражений фильтра, 
который теперь полностью поддерживает синтаксис выражений фильтра, 
используемый в Delphi 2.x. Если Вы раньше использовали эту компоненту,
то прочитайте описание свойства Filter в справочном файле библиотеки.
Кроме того, начиная с версии 2.00 компонента использует для наложения
фильтра одновременно как свойство Filter, так и событие OnFiltering.
   
Совместимость с Borland Delphi
------------------------------

Некоторые компоненты утратили свою актуальность в Delphi 2.0 в 
связи с существенным расширением VCL в новой реализации Delphi и 
могут быть использованы в основном на этапе переноса приложений из 
16-разрядной в 32-разрядную версию.

Для совместимости с Delphi 2.0 "сверху-вниз" в состав RX Library
включен модуль STR16.PAS, который содержит функции работы со строками,
вошедшие в состав модулей SYSTEM и SYSUTILS в Delphi 2.0. При
перекомпиляции проекта, использующего этот модуль, в Delphi-32, Вы
можете как оставить, так и убрать его из секции USES (либо заменить
на SysUtils, если Вы не использовали этот модуль раньше).

Настоящая версия библиотеки совместима со всеми редакциям
Delphi 3.0 (build 5.53, 5.83).
Библиотека была установлена и протестирована в Delphi 4.0 build 5.33
(C/S Suite), build 5.37 и build 5.104.
Библиотека была установлена и протестирована в Delphi 5.0 build 5.62
(Enterprise Edition).
Инсталляция и правильная работа библиотеки в других версиях и редакциях
Delphi не гарантируется.

Совместимость с Borland C++ Builder
-----------------------------------

Библиотека подготовлена для использования с Borland C++ Builder
и проинсталлирована в версии 1.0 Professional и C/S, а также в
версиях C++ Builder 3.0 C/S, C++ Builder 4.0 C/S.

Библиотека RX практически не тестировалась в Borland C++ Builder,
поэтому авторы будет благодарны всем пользователям за их замечания
и предложения по использованию библиотеки в среде C++ Builder.

Исходные тексты
---------------

Все модули библиотеки RX Library поставляются с исходными
текстами и доступны для изучения, доработки, изменения и т.д.
Все строковые константы, используемые компонентами библиотеки,
которые могут быть локализованы, собраны в файлах ресурсов,
исходные тексты которых также поставляются (см. каталог RX\RESOURCE), 
причем для строковых ресурсов исходные тексты представлены в двух 
вариантах - русском и английском. Все остальные файлы ресурсов,
содержащие графические изображения или иконки для палитры компонентов,
также поставляются как в скомпилированном варианте (*.R16/32 [RES], 
*.D16/32 [DCR]), так и в виде текстовых *.RC-файлов.

В состав библиотеки входят скомпилированные версии файлов ресурсов.
Они устанавливаются в каталог RX\UNITS, Вы можете также самостоятельно
перекомпилировать ресурсы библиотеки, используя любой компилятор
ресурсов (например, BRCC.EXE или BRCC32.EXE).

После инсталляции исходные тексты модулей библиотеки
располагаются в каталоге RX\UNITS, исходные тексты файлов ресурсов -
в каталоге RX\UNITS\RESOURCE.

Примечания
----------

Большинство модулей библиотеки полностью написаны нами. Поэтому
мы считаем необходимым особо отметить те модули, вошедшие в состав
RX Library, которые основаны на разработках других авторов.

Модуль RXLOOKUP является переделанным вариантом модуля DBLOOKUP
из состава VCL, использован также исходный текст модуля DBCTRLS.PAS
из Delphi 2.0.

Модуль STRUTILS базируется на модуле функций работы со строками
AGSLIB Алексея Лукина, которому мы выражаем особую благодарность за
то, что пользовались этим модулем в MS-DOS с успехом более 3-х лет.

Модуль DBEXCPT является слегка измененным вариантом модуля
DBEXCEPT.PAS из демонстрационного примера, входящего в поставку Borland
Delphi C/S 1.0 и расположенного в каталоге DELPHI\DEMOS\DB\TOOLS.

Некоторые компоненты модуля DBLISTS почерпнуты из модуля BDETABLE,
также входящего в поставку Borland Delphi 1.0 и расположенного в
каталоге DELPHI\DEMOS\DB\TOOLS.

Модуль PICKDATE.PAS содержит в секции "implementation" слегка
измененную реализацию класса TCalendar, изначально скопированную из
модуля CALENDAR.PAS, входящего в состав Delphi.

Процедуры для чтения и записи графических изображений формата GIF в
модуле RXGIF.PAS основаны на исходных текстах свободно распространяемой
программы GBM на языке C, автор Andy Key (nyangau@interalpha.co.uk).

Модуль PICTEDIT содержит измененный вариант стандартного редактора
свойств Delphi, содержащегося в модуле PICEDIT.PAS из VCL; модуль
QBNDDLG является измененным вариантом модуля QBINDDLG.PAS из VCL,
модуль IMAGPRVW.PAS, содержащий диалог с предварительным просмотром
изображений (в версиях для Delphi 1.0, 2.0), является измененным
вариантом модуля IMAGEWIN.PAS из демонстрационных примеров Delphi.

Авторы выражают благодарность всем пользователям предыдущих версий
библиотеки RX, приславшим свои замечания и предложения в наш адрес и 
сообщившим о замеченных ошибках.

  RX Library Web Site:
    http://rx.demo.ru

  Координаты авторов:
    Федор Кожевников   (fkozh@iname.com)
    Игорь Павлюк       (igorp@mail.com)
    Сергей Королев     (korolev@usa.net)
