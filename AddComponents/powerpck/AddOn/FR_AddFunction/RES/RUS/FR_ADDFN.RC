#include "frFConst.pas"

STRINGTABLE
{

SDescriptionISWORDPRESENT, "ISWORDPRESENT(<Слово>,<Строка>,<Символы>)/"
  "Определяет, присутствует ли слово <Слово> в строке <Строка> используя"
  " символы в <Символы> как разделители между словами и возвращает результат."

SDescriptionWORDPOSITION, "WORDPOSITION(<Число>,<Строка>,<Символы>)/"
  "Возвращает позицию первого символа N-го <Число> слова в строке"
  " <Строка> используя символы в <Символы> как"
  " разделители между словами и возвращает результат."

SDescriptionEXTRACTWORD, "EXTRACTWORD(<Число>,<Строка>,<Символы>)/"
  "Выделяет N-ое <Число> слово из строки <Строка> используя"
  " символы в <Символы> как разделители между словами и возвращает результат."

SDescriptionWORDCOUNT, "WORDCOUNT(<Строка>,<Символы>)/"
  "Считает число слов в строке <Строка> используя символы в"
  " <Символы> как разделители между словами и возвращает результат."

SDescriptionNPOS, "NPOS(<Подстрока>,<Строка>,<Число>)/"
  "Ищет позицию N-го <Число> вхождения подстроки <Подстрока> в строке "
  "<Строка> и возвращает результат."

SDescriptionREPLACESTR, "REPLACESTR(<Строка>,<Подстрока1>,<Подстрока2>)/"
  "Заменяет в строке <Строка> все вхождения подстроки <Подстрока1>"
  " на подстроку <Подстрока2> и возвращает результат."

SDescriptionTRIMRIGHT, "TRIMRIGHT(<Строка>)/"
  "Удаляет справа пробелы из строки <Строка> и возвращает результат."

SDescriptionTRIMLEFT, "TRIMLEFT(<Строка>)/"
  "Удаляет слева пробелы из строки <Строка> и возвращает результат."

SDescriptionDELETE, "DELETE(<Строка1>,<Число1>,<Число2>)/"
  "Удаляет <Число2> символов в строке <Строка>, начиная с позиции <Число1>"
  " и возвращает результат."

SDescriptionINSERT, "INSERT(<Подстрока1>,<Строка>,<Число>)/"
  "Вставляет строку <Подстрока> в строку <Строка>, начиная с позиции <Число>"
  " и возвращает результат."

SDescriptionDATETOSTR, "DATETOSTR(<Дата>)/"
  "Конвертирует дату <Дата> в строку и возвращает результат."

SDescriptionTIMETOSTR, "TIMETOSTR(<Время>)/"
  "Конвертирует время <Время> в строку и возвращает результат."

SDescriptionREPLICATE, "REPLICATE(<Символы>,<Длина>)/"
  "Возвращает строку длиной <Длина> состоящую из символов <Символы>."

SDescriptionPADLEFT, "PADLEFT(<Строка>,<Длина>,<Символ>)/"
  "Дополняет слева строку <Строка> до длины <Длина> символами из"
  " строки <Символ> и возвращает результат."

SDescriptionPADRIGHT, "PADRIGHT(<Строка>,<Длина>,<Символ>)/"
  "Дополняет справа строку <Строка> до длины <Длина> символами из"
  " строки <Символ> и возвращает результат."

SDescriptionPADCENTER, "PADCENTER(<Строка>,<Длина>,<Символ>)/"
  "Дополняет слева и справа строку <Строка> до длинны <Длина> символами"
  " из строки <Символ>, центрируя ее и возвращает результат."

SDescriptionENDPOS, "ENDPOS(<Строка>,<Подстрока>)/"
  "Ищет в строке <Строка> подстроку <Подстроку>"
  " начиная с конца и возвращает позицию с которой он ее нашел."

SDescriptionLEFTCOPY, "LEFTCOPY(<Строка>,<Число>)/"
  "Копирует из строки <Строка> начиная сначала"
  " <Число> символов и возвращает результат."

SDescriptionRIGHTCOPY, "RIGHTCOPY(<Строка>,<Число>)/"
  "Копирует из строки <Строка> начиная с конца"
  " <Число> символов и возвращает результат."

SDescriptionCOMPARESTR, "COMPARESTR(<Строка1>,<Строка2>)/"
  "Сравнивает строку <Строка1> и строку <Строка2>, и возвращает номер"
  " позиции начиная с которого строка <Строка1> отличается от строки"
  " <Строка2> или 0 если они равны."

SDescriptionCHR, "CHR(<Число>)/"
  "Возвращает ANSI символ с номером <Число>."




SDescriptionVALIDINT, "VALIDINT(<Строка>)/"
  "Возвращает True, если <Строка> является целым числом."

SDescriptionVALIDFLOAT, "VALIDFLOAT(<Строка>)/"
  "Возвращает True, если <Строка> является числом с плавающей точкой."

SDescriptionISRANGENUM, "ISRANGENUM(<Число1>,<Число2>,<Число3>)/"
  "Возвращает True, если <Число3> находится в диапазоне между числом"
  " <Число1> и числом <Число2>."

SDescriptionSTRTOFLOATDEF, "STRTOFLOATDEF(<Строка>,<Число>)/"
  "Конвертирует строку <Строка> в число с плавающей запятой и возвращает"
  " результат. В случае ошибки конвертирования возвращает значение по"
  " умолчанию <Число>."

SDescriptionSTRTOINTDEF, "STRTOINTDEF(<Строка>,<Число>)/"
  "Конвертирует строку <Строка> в целое число и возвращает результат."
  " В случае ошибки конвертации возвращает значение по умолчанию <Число>."

SDescriptionSTRTOINT, "STRTOINT(<Строка>)/"
  "Конвертирует строку <Строка> в целое число и возвращает результат."

SDescriptionSTRTOFLOAT, "STRTOFLOAT(<Строка>)/"
  "Конвертирует строку <Строка> в число с плавающей запятой и"
  " возвращает результат."




SDescriptionDATEDIFF, "DATEDIFF(<Дата1>,<Дата2>,<var Стр.Пер.>)/"
  "Определяет разницу между датами <Дата1> и <Дата2> в днях, месяцах,"
  " годах и возвращает результат в виде строки разделенной "";"" в"
  " строковую переменную <Стр.Пер.>. Переменная <var Стр.Пер.>"
  " должна быть объявлена заранее."

SDescriptionINCDATE, "INCDATE(<Дата>,<Строка>)/"
  "Увеличивает дату <Дата> на заданное количество дней, месяцев и "
  "лет, извлекая их из строки <Строка> разделенных "";"" и возвращает"
  " полученную дату как результат."

SDescriptionINCTIME, "INCTIME(<Время>,<Строка>)/"
  "Увеличивает время <Время> на заданное количество часов, минут, секунд"
  " и миллисекунд, извлекая их из строки <Строка> разделенных "";"" и"
  " возвращает полученное время как результат."

SDescriptionDAYSPERMONTH, "DAYSPERMONTH(<Число1>,<Число2>)/"
  "Возвращает число дней в месяце номер <Число2> для года <Число1>."

SDescriptionFIRSTDAYOFNEXTMONTH, "FIRSTDAYOFNEXTMONTH(<Дата>)/"
  "Возвращает первый день следующего месяца относительно даты <Дата>"
  " в виде даты."

SDescriptionFIRSTDAYOFPREVMONTH, "FIRSTDAYOFPREVMONTH(<Дата>)/"
  "Возвращает первый день предыдущего месяца относительно даты <Дата>"
  " в виде даты."

SDescriptionLASTDAYOFPREVMONTH, "LASTDAYOFPREVMONTH(<Дата>)/"
  "Возвращает последний день предыдущего месяца относительно даты"
  " <Дата> в виде даты."

SDescriptionINCDAY, "INCDAY(<Дата>,<Число>)/"
  "Увеличивает дату <Дата> на заданное количество дней <Число> и"
  " возвращает полученную дату как результат."

SDescriptionINCYEAR, "INCYEAR(<Дата>,<Число>)/"
  "Увеличивает дату <Дата> на заданное количество лет <Число> и возвращает"
  " полученную дату как результат."

SDescriptionISRANGEDATE, "ISRANGEDATE(<Дата1>,<Дата2>,<Дата3>)/"
  "Возвращает True, если <Дата3> находится в диапазоне между датой"
  " <Дата1> и датой <Дата2>."

SDescriptionSTRTODATEDEF, "STRTODATEDEF(<Строка>,<Дата>)/"
  "Конвертирует строку <Строка> в дату и возвращает результат. В случае"
  " ошибки конвертации возвращает значение по умолчанию <Дата>."

SDescriptionVALIDDATE, "VALIDDATE(<Строка>)/"
  "Возвращает True, если <Строка> является датой."

SDescriptionINCMONTH, "INCMONTH(<Дата>,<Число>)/"
  "Увеличивает дату <Дата> на заданное количество"
  " месяцев <Число> и возвращает полученную дату как результат."

SDescriptionISLEAPYEAR, "ISLEAPYEAR(<Число>)/"
  "Возвращает True, если год <Число> является високосным."

SDescriptionCREATEDATE,  "CREATEDATE(<Строка>)/"
  "Возвращает обработанную строку <Строка>, обрамленную одинарными" 
  " кавычками, с датой для создания SQL запроса." 
  " Перед использованием функции поместите желаемый формат даты "
  "(например, dd/mm/yyyy) в свойство TfrAddFunctionLibrary.FormatDate."

SDescriptionCREATESTR,  "CREATESTR(<Строка>)/"
  "Возвращает обработанную строку <Строка> обрамленную одинарными"
  " кавычками для создания SQL запроса."

SDescriptionCREATENUM,  "CREATENUM(<Строка>)/"
  "Возвращает обработанную строку <Строка> с числом для создания"
  " SQL запроса."
  " Возможная запятая в строке заменяется точкой."



SDescriptionSWAP, "SWAP(<var Пер.1>,<var Пер.2>)/"
  "Меняет местами переменные <Пер.1> и <Пер.2>."
  " Переменные должны быть объявлены заранее или в их качестве"
  " должны использоваться соответствующие контролы. Переменные"
  " могут быть любого типа."



SDescriptionABS, "ABS(<Число>)/"
  "Возвращает абсолютную величину <Числа>"
}
