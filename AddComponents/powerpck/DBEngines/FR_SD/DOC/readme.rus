  frSDComponents это набор компонент для использование их в диалоге
FastReport'a (www.fastreport.ru), самого лучшего генератора отчетов.
Он основан на библиотеке SQLDirect (http://www.sqldirect-soft.com).
  frSDComponents работает с D3, D4, D5, D6, D7.


  Установка

  Последовательность установки: Сначала устанавливается SQLDirect, потом 
FastReport, потом frSDComponents.
  Примечание: Возможно при установки frSDComponents в D3-D5, Delphi будет 
ругаться на отсутствие некоторых свойств в форме TfrSDParamsForm. Ничего 
страшного тут нет, просто нажмите кнопку "Игнорировать" и все.


  Небольшое описание

  Почти все published свойства которые есть у TSDDatabase, TSDQuery. 
TSDStoredProc я соответственно перенес в frSDDatabase, frSDQuery, 
frSDStoredProc для их использования в OI. 
Из public свойств есть: EOF, RecordCount, IsEmpty, FieldCount, Fields.
Из методов есть: Open, Close, ExecSQL, Next, Prior, First, Last, Locate, 
ExecProc.

Особенности работы Locate в frSDQuery (frSDStoredProc)
- Он ищет только по одному полю, так как при поиске по нескольким полям надо
передавать, что искать в виде Variant массива, а как это сделать из скрипта
я не знаю.
- В качестве LocateOption, надо указывать в кавычках константы
loCaseInsensitive, loPartialKey.
Например так:
TestSDQuery.Locate(Edit1.Text, Edit2.Text, 'loCaseInsensitive,loPartialKey')
или так:
TestSDQuery.Locate(Edit1.Text, Edit2.Text, 'loCaseInsensitive' )
или так если хотите искать без параметров: 
TestSDQuery.Locate(Edit1.Text, Edit2.Text, '')

  Кроме того, у frSDQuery и frSDStoredProc еще есть свойство Fields к
которому  можно  обращаться  как  по   индексу  поля, так и по его имени. 
  К свойству Fields привязаны еще пять  свойства:
DisplayLabel,  DisplayWidth,  Visible, FieldName, IsNull  к  которым так же
можно обращаться по номеру и по имени, например :

{ Это кусок кода из скрипта FR }
begin

 Memo2.Lines.Add(TestSDQuery.Fields.FieldName[1]);
 Memo3.Lines.Add(TestSDQuery.Fields[1]);
 Memo4.Lines.Add(TestSDQuery.Fields.DisplayLabel[1]);
 Memo5.Lines.Add(TestSDQuery.Fields.DisplayWidth[1]);
 Memo6.Lines.Add(TestSDQuery.Fields.Visible[1]);
 Memo7.Lines.Add(TestSDQuery.Fields.IsNull[1]);

 Memo2.Lines.Add(TestSDQuery.Fields.FieldName['TEST']);
 Memo3.Lines.Add(TestSDQuery.Fields['TEST']);
 Memo4.Lines.Add(TestSDQuery.Fields.DisplayLabel['TEST']);
 Memo5.Lines.Add(TestSDQuery.Fields.DisplayWidth['TEST']);
 Memo6.Lines.Add(TestSDQuery.Fields.Visible['TEST']);
 Memo6.Lines.Add(TestSDQuery.Fields.IsNull['TEST']);
  
end

А свойствам DisplayLabel, DisplayWidth, Visible можно в скрипте даже 
присваивать новые значения, например:

{ Это кусок кода из скрипта FR} 
begin
 TestSDQuery.Fields.Visible[1] := not TestSDQuery.Fields.Visible[1];
 TestSDQuery.Fields.DisplayLabel[1] := Edit2.Text;
 TestSDQuery.Fields.DisplayWidth[1] := Edit2.Text;

 TestSDQuery.Fields.Visible[Edit1.Text] := not TestSDQuery.Fields.Visible[Edit1.Text];
 TestSDQuery.Fields.DisplayLabel[Edit1.Text] := Edit2.Text;
 TestSDQuery.Fields.DisplayWidth[Edit1.Text] := Edit2.Text;
end


Касательно работы с frSDStoredProc:

  Компонент frSDStoredProc был введен в библиотеку, для того что бы можно 
было запускать SP которые возвращают out-параметры, хотя конечно и любые 
другие SP он тоже умеет выполнять как и обычный TSDStoredProc
  Соответственно был расширен редактор параметров для frSDStoredProc, туда 
была добавлена возможность указывать вид параметра (ParamType). При 
выполнении SP, с помощью методов Open или ExecProc, обрабатываются только 
параметры вида Input и InputOutput. Для получения значения out-параметра
надо использовать метод GetOutParam(<Имя параметра>|<Номер параметра>). 
Если out-параметр пустой, т.е. равный null, то возвращается пустая строка.
Например:

{ Это кусок кода из скрипта FR} 
begin
 Label1.Caption := TestSDStoredProc.GetOutParam('p1');
 Label1.Caption := TestSDStoredProc.GetOutParam(1);
end


Ну вот вроде бы пока и все. Если найдете какие либо глюки или есть 
предложения пишите:

stalker@miac.dp.ua
Толик Гусин
Copyright (c) 2001-2002 by Stalker SoftWare
